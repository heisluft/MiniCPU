package de.heisluft.minicpu;

import de.heisluft.minicpu.internal.CpuWatcher;

import java.awt.Font;
import java.awt.event.InputEvent;
import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

class CpuDisplaySimple extends Display implements CpuWatcher, SwingConstants {
    private JLabel labelA;
    private JLabel labelPC;
    private JLabel labelIR1;
    private JLabel labelIR2;
    private JLabel labelEq;
    private JLabel labelLt;
    private JLabel labelOv;
    private JLabel labelAdr1;
    private JLabel labelAdr2;
    private JLabel labelAdr3;
    private JLabel labelMem1;
    private JLabel labelMem2;
    private JLabel labelMem3;
    private JPanel registerPanel;
    private JPanel flagPanel;
    private JPanel memoryPanel;
    private Font font;
    private Font bigFont;
    private JLabel pcLabel;
    private JLabel irLabel;
    private JLabel acLabel;
    private JLabel zLabel;
    private JLabel nLabel;
    private JLabel vLabel;
    private JButton executeButton;
    private JButton singleButton;

    CpuDisplaySimple(ControllerInterface controller) {
        super(controller);
    }

    @Override
    protected void initGUI() {
        window = new JFrame("CPU-Kontrolle");
        window.setJMenuBar(menuBar);
        window.setLayout(null);
        JPanel jPanel = (JPanel)window.getContentPane();
        jPanel.setLayout(null);
        font = jPanel.getFont();
        bigFont = new Font(font.getName(), font.getStyle(), 24);
        registerPanel = new JPanel();
        registerPanel.setLayout(null);
        registerPanel.setSize(200, 110);
        registerPanel.setLocation(10, 20);
        jPanel.add(registerPanel);
        registerPanel.setBorder(new TitledBorder(LineBorder.createGrayLineBorder(), "Register"));
        pcLabel = new JLabel();
        pcLabel.setText("PC:");
        pcLabel.setSize(40, 20);
        pcLabel.setLocation(20, 20);
        registerPanel.add(pcLabel);
        labelPC = new JLabel();
        labelPC.setText("");
        labelPC.setSize(60, 20);
        labelPC.setLocation(60, 20);
        labelPC.setBorder(LineBorder.createGrayLineBorder());
        registerPanel.add(labelPC);
        irLabel = new JLabel();
        irLabel.setText("IR:");
        irLabel.setSize(40, 20);
        irLabel.setLocation(20, 50);
        registerPanel.add(irLabel);
        labelIR1 = new JLabel();
        labelIR1.setText("");
        labelIR1.setSize(60, 20);
        labelIR1.setLocation(60, 50);
        labelIR1.setBorder(LineBorder.createGrayLineBorder());
        registerPanel.add(labelIR1);
        labelIR2 = new JLabel();
        labelIR2.setText("");
        labelIR2.setSize(60, 20);
        labelIR2.setLocation(119, 50);
        labelIR2.setBorder(LineBorder.createGrayLineBorder());
        registerPanel.add(labelIR2);
        acLabel = new JLabel();
        acLabel.setText("AC:");
        acLabel.setSize(40, 20);
        acLabel.setLocation(20, 80);
        registerPanel.add(acLabel);
        labelA = new JLabel();
        labelA.setText("");
        labelA.setSize(60, 20);
        labelA.setLocation(60, 80);
        labelA.setBorder(LineBorder.createGrayLineBorder());
        registerPanel.add(labelA);
        flagPanel = new JPanel();
        flagPanel.setLayout(null);
        flagPanel.setSize(140, 110);
        flagPanel.setLocation(220, 20);
        jPanel.add(flagPanel);
        flagPanel.setBorder(new TitledBorder(LineBorder.createGrayLineBorder(), "Flags"));
        zLabel = new JLabel();
        zLabel.setText("Z:");
        zLabel.setSize(40, 20);
        zLabel.setLocation(20, 20);
        flagPanel.add(zLabel);
        labelEq = new JLabel();
        labelEq.setText("");
        labelEq.setHorizontalAlignment(CENTER);
        labelEq.setSize(20, 20);
        labelEq.setLocation(60, 20);
        labelEq.setBorder(LineBorder.createGrayLineBorder());
        flagPanel.add(labelEq);
        nLabel = new JLabel();
        nLabel.setText("N:");
        nLabel.setSize(40, 20);
        nLabel.setLocation(20, 50);
        flagPanel.add(nLabel);
        labelLt = new JLabel();
        labelLt.setText("");
        labelLt.setHorizontalAlignment(CENTER);
        labelLt.setSize(20, 20);
        labelLt.setLocation(60, 50);
        labelLt.setBorder(LineBorder.createGrayLineBorder());
        flagPanel.add(labelLt);
        vLabel = new JLabel();
        vLabel.setText("V:");
        vLabel.setSize(40, 20);
        vLabel.setLocation(20, 80);
        flagPanel.add(vLabel);
        labelOv = new JLabel();
        labelOv.setText("");
        labelOv.setHorizontalAlignment(CENTER);
        labelOv.setSize(20, 20);
        labelOv.setLocation(60, 80);
        labelOv.setBorder(LineBorder.createGrayLineBorder());
        flagPanel.add(labelOv);
        memoryPanel = new JPanel();
        memoryPanel.setLayout(null);
        memoryPanel.setSize(200, 110);
        memoryPanel.setLocation(370, 20);
        jPanel.add(memoryPanel);
        memoryPanel.setBorder(new TitledBorder(LineBorder.createGrayLineBorder(), "Speicherauszug"));
        labelAdr1 = new JLabel();
        labelAdr1.setText("0");
        labelAdr1.setSize(80, 20);
        labelAdr1.setLocation(20, 20);
        memoryPanel.add(labelAdr1);
        labelMem1 = new JLabel();
        labelMem1.setText("");
        labelMem1.setSize(80, 21);
        labelMem1.setLocation(100, 20);
        labelMem1.setBorder(LineBorder.createGrayLineBorder());
        memoryPanel.add(labelMem1);
        labelAdr2 = new JLabel();
        labelAdr2.setText("1");
        labelAdr2.setSize(80, 20);
        labelAdr2.setLocation(20, 40);
        memoryPanel.add(labelAdr2);
        labelMem2 = new JLabel();
        labelMem2.setText("");
        labelMem2.setSize(80, 20);
        labelMem2.setLocation(100, 40);
        labelMem2.setBorder(LineBorder.createGrayLineBorder());
        memoryPanel.add(labelMem2);
        labelAdr3 = new JLabel();
        labelAdr3.setText("100");
        labelAdr3.setSize(80, 20);
        labelAdr3.setLocation(20, 70);
        memoryPanel.add(labelAdr3);
        labelMem3 = new JLabel();
        labelMem3.setText("");
        labelMem3.setSize(80, 20);
        labelMem3.setLocation(100, 70);
        labelMem3.setBorder(LineBorder.createGrayLineBorder());
        memoryPanel.add(labelMem3);
        executeButton = new JButton("Ausf\u00fchren");
        executeButton.setSize(150, 30);
        executeButton.setLocation(100, 150);
        window.add(executeButton);
        executeButton.addActionListener(actionEvent -> controller.execute());
        singleButton = new JButton("Einzelschritt");
        singleButton.setSize(150, 30);
        singleButton.setLocation(350, 150);
        window.add(singleButton);
        singleButton.addActionListener(actionEvent -> controller.singleStep());
        window.setSize(600, 250);
        window.setVisible(true);
        window.setResizable(false);
    }

    private void setDisplaySize(boolean big) {
        if (big) {
            ((TitledBorder) registerPanel.getBorder()).setTitleFont(bigFont);
            registerPanel.setSize(300, 165);
            registerPanel.setLocation(15, 30);
            pcLabel.setFont(bigFont);
            pcLabel.setSize(60, 30);
            pcLabel.setLocation(30, 30);
            labelPC.setFont(bigFont);
            labelPC.setSize(90, 30);
            labelPC.setLocation(90, 30);
            irLabel.setFont(bigFont);
            irLabel.setSize(60, 30);
            irLabel.setLocation(30, 75);
            labelIR1.setFont(bigFont);
            labelIR1.setSize(90, 30);
            labelIR1.setLocation(90, 75);
            labelIR2.setFont(bigFont);
            labelIR2.setSize(90, 30);
            labelIR2.setLocation(179, 75);
            acLabel.setFont(bigFont);
            acLabel.setSize(60, 30);
            acLabel.setLocation(30, 120);
            labelA.setFont(bigFont);
            labelA.setSize(90, 30);
            labelA.setLocation(90, 120);
            ((TitledBorder) flagPanel.getBorder()).setTitleFont(bigFont);
            flagPanel.setSize(210, 165);
            flagPanel.setLocation(330, 30);
            zLabel.setFont(bigFont);
            zLabel.setSize(60, 30);
            zLabel.setLocation(30, 30);
            labelEq.setFont(bigFont);
            labelEq.setSize(30, 30);
            labelEq.setLocation(90, 30);
            nLabel.setFont(bigFont);
            nLabel.setSize(60, 30);
            nLabel.setLocation(30, 75);
            labelLt.setFont(bigFont);
            labelLt.setSize(30, 30);
            labelLt.setLocation(90, 75);
            vLabel.setFont(bigFont);
            vLabel.setSize(60, 30);
            vLabel.setLocation(30, 120);
            labelOv.setFont(bigFont);
            labelOv.setSize(30, 30);
            labelOv.setLocation(90, 120);
            ((TitledBorder) memoryPanel.getBorder()).setTitleFont(bigFont);
            memoryPanel.setSize(300, 165);
            memoryPanel.setLocation(555, 30);
            labelAdr1.setFont(bigFont);
            labelAdr1.setSize(120, 30);
            labelAdr1.setLocation(30, 30);
            labelMem1.setFont(bigFont);
            labelMem1.setSize(120, 31);
            labelMem1.setLocation(150, 30);
            labelAdr2.setFont(bigFont);
            labelAdr2.setSize(120, 30);
            labelAdr2.setLocation(30, 60);
            labelMem2.setFont(bigFont);
            labelMem2.setSize(120, 30);
            labelMem2.setLocation(150, 60);
            labelAdr3.setFont(bigFont);
            labelAdr3.setSize(120, 30);
            labelAdr3.setLocation(30, 105);
            labelMem3.setFont(bigFont);
            labelMem3.setSize(120, 30);
            labelMem3.setLocation(150, 105);
            executeButton.setLocation(150, 225);
            singleButton.setLocation(525, 225);
            window.setSize(900, 375);
        } else {
            ((TitledBorder) registerPanel.getBorder()).setTitleFont(font);
            registerPanel.setSize(200, 110);
            registerPanel.setLocation(10, 20);
            pcLabel.setFont(font);
            pcLabel.setSize(40, 20);
            pcLabel.setLocation(20, 20);
            labelPC.setFont(font);
            labelPC.setSize(60, 20);
            labelPC.setLocation(60, 20);
            irLabel.setFont(font);
            irLabel.setSize(40, 20);
            irLabel.setLocation(20, 50);
            labelIR1.setFont(font);
            labelIR1.setSize(60, 20);
            labelIR1.setLocation(60, 50);
            labelIR2.setFont(font);
            labelIR2.setSize(60, 20);
            labelIR2.setLocation(119, 50);
            acLabel.setFont(font);
            acLabel.setSize(40, 20);
            acLabel.setLocation(20, 80);
            labelA.setFont(font);
            labelA.setSize(60, 20);
            labelA.setLocation(60, 80);
            ((TitledBorder) flagPanel.getBorder()).setTitleFont(font);
            flagPanel.setSize(140, 110);
            flagPanel.setLocation(220, 20);
            zLabel.setFont(font);
            zLabel.setSize(40, 20);
            zLabel.setLocation(20, 20);
            labelEq.setFont(font);
            labelEq.setSize(20, 20);
            labelEq.setLocation(60, 20);
            nLabel.setFont(font);
            nLabel.setSize(40, 20);
            nLabel.setLocation(20, 50);
            labelLt.setFont(font);
            labelLt.setSize(20, 20);
            labelLt.setLocation(60, 50);
            vLabel.setFont(font);
            vLabel.setSize(40, 20);
            vLabel.setLocation(20, 80);
            labelOv.setFont(font);
            labelOv.setSize(20, 20);
            labelOv.setLocation(60, 80);
            ((TitledBorder) memoryPanel.getBorder()).setTitleFont(font);
            memoryPanel.setSize(200, 110);
            memoryPanel.setLocation(370, 20);
            labelAdr1.setFont(font);
            labelAdr1.setSize(80, 20);
            labelAdr1.setLocation(20, 20);
            labelMem1.setFont(font);
            labelMem1.setSize(80, 21);
            labelMem1.setLocation(100, 20);
            labelAdr2.setFont(font);
            labelAdr2.setSize(80, 20);
            labelAdr2.setLocation(20, 40);
            labelMem2.setFont(font);
            labelMem2.setSize(80, 20);
            labelMem2.setLocation(100, 40);
            labelAdr3.setFont(font);
            labelAdr3.setSize(80, 20);
            labelAdr3.setLocation(20, 70);
            labelMem3.setFont(font);
            labelMem3.setSize(80, 20);
            labelMem3.setLocation(100, 70);
            executeButton.setLocation(100, 150);
            singleButton.setLocation(350, 150);
            window.setSize(600, 250);
        }
    }

    @Override
    public void reportCmd(String string, String string2, String string3, String string4, String string5, String string6, boolean zero, boolean negative, boolean overflow, String string7, String string8, String string9, String[] arrstring, String[] arrstring2, String[] arrstring3, String[] arrstring4) {
        labelA.setText(string6);
        labelPC.setText(string9);
        labelIR1.setText(string7);
        labelIR2.setText(string8);
        labelEq.setText(zero ? "*" : " ");
        labelLt.setText(negative ? "*" : " ");
        labelOv.setText(overflow ? "*" : " ");
        labelAdr1.setText(arrstring[0]);
        labelAdr2.setText(arrstring[1]);
        labelAdr3.setText(arrstring3[0]);
        labelMem1.setText(arrstring2[0]);
        labelMem2.setText(arrstring2[1]);
        labelMem3.setText(arrstring4[0]);
    }

    @Override
    public void reportError(String message) {
        JOptionPane.showMessageDialog(window, message, "CPU-Fehler", JOptionPane.ERROR_MESSAGE);
    }

    @Override
    protected void createMenus() {
        super.createMenus();
        closeItem.setEnabled(false);
        saveItem.setEnabled(false);
        saveAsItem.setEnabled(false);
        printItem.setEnabled(false);
        JMenuItem jMenuItem = new JMenuItem("Widerrufen", 90);
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(90, InputEvent.CTRL_DOWN_MASK));
        jMenuItem.setEnabled(false);
        editMenu.add(jMenuItem);
        jMenuItem = new JMenuItem("Wiederholen");
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(90, InputEvent.SHIFT_DOWN_MASK + InputEvent.CTRL_DOWN_MASK));
        jMenuItem.setEnabled(false);
        editMenu.add(jMenuItem);
        editMenu.addSeparator();
        jMenuItem = new JMenuItem("Ausschneiden", 88);
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(88, InputEvent.CTRL_DOWN_MASK));
        jMenuItem.setEnabled(false);
        editMenu.add(jMenuItem);
        jMenuItem = new JMenuItem("Kopieren", 67);
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(67, InputEvent.CTRL_DOWN_MASK));
        jMenuItem.setEnabled(false);
        editMenu.add(jMenuItem);
        jMenuItem = new JMenuItem("Einf\u00fcgen", 86);
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(86, InputEvent.CTRL_DOWN_MASK));
        jMenuItem.setEnabled(false);
        editMenu.add(jMenuItem);
        jMenuItem = new JMenuItem("Alles ausw\u00e4hlen", 65);
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(65, InputEvent.CTRL_DOWN_MASK));
        jMenuItem.setEnabled(false);
        editMenu.add(jMenuItem);
        toolMenu.addSeparator();
        jMenuItem = new JMenuItem("Einfache Darstellung");
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(69, InputEvent.CTRL_DOWN_MASK + InputEvent.ALT_DOWN_MASK));
        jMenuItem.addActionListener(actionEvent -> controller.activateEasyView());
        toolMenu.add(jMenuItem);
        jMenuItem = new JMenuItem("Detaildarstellung");
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(68, InputEvent.CTRL_DOWN_MASK + InputEvent.ALT_DOWN_MASK));
        jMenuItem.addActionListener(actionEvent -> controller.activateDetailedView());
        toolMenu.add(jMenuItem);
        toolMenu.addSeparator();
        jMenuItem = new JMenuItem("Abbruchschranke setzen");
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(65, InputEvent.CTRL_DOWN_MASK + InputEvent.ALT_DOWN_MASK));
        jMenuItem.addActionListener(actionEvent -> TimeBarrier.show(controller));
        toolMenu.add(jMenuItem);
        toolMenu.addSeparator();
        jMenuItem = new JMenuItem("CPU r\u00fccksetzen");
        jMenuItem.setAccelerator(KeyStroke.getKeyStroke(82, InputEvent.CTRL_DOWN_MASK + InputEvent.ALT_DOWN_MASK));
        jMenuItem.addActionListener(actionEvent -> controller.reset());
        toolMenu.add(jMenuItem);
    }

    @Override
    protected void setFontSize(boolean bigFont) {
        setDisplaySize(bigFont);
    }

}

